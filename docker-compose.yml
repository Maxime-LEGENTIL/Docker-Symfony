version: '3.8'

services:
  php:
    build:
      context: ./docker/php
    container_name: symfony_php
    volumes:
      - ./:/var/www/symfony
    networks:
      - symfony

  nginx:
    image: nginx:alpine
    container_name: symfony_nginx
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/symfony
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - symfony

  mysql:
    image: mysql:8.0
    container_name: symfony_mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: symfony
      MYSQL_USER: symfony
      MYSQL_PASSWORD: symfony
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - symfony

  ###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
  ###< doctrine/doctrine-bundle ###

  adminer:
    image: adminer
    container_name: symfony_adminer
    restart: always
    ports:
      - "8081:8080"
    networks:
      - symfony

networks:
  symfony:
    driver: bridge

volumes:
  mysql_data:

  ###> doctrine/doctrine-bundle ###
  database_data:
  ###< doctrine/doctrine-bundle ###
